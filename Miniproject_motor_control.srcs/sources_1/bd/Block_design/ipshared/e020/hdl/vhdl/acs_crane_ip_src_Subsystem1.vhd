-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\acs_cranecontroller_firsttest\acs_crane_ip_src_Subsystem1.vhd
-- Created: 2019-10-25 14:34:10
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.2
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- pwm                           ce_out        0.2
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: acs_crane_ip_src_Subsystem1
-- Source Path: acs_cranecontroller_firsttest/Subsystem1
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.acs_crane_ip_src_Subsystem1_pkg.ALL;

ENTITY acs_crane_ip_src_Subsystem1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        destination_x                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En15
        desired_angle                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En15
        position                          :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En15
        angle                             :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En15
        ce_out                            :   OUT   std_logic;
        pwm                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En2
        );
END acs_crane_ip_src_Subsystem1;


ARCHITECTURE rtl OF acs_crane_ip_src_Subsystem1 IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL destination_x_unsigned           : unsigned(31 DOWNTO 0);  -- ufix32_En15
  SIGNAL Gain1_mul_temp                   : unsigned(63 DOWNTO 0);  -- ufix64_En63
  SIGNAL Gain1_out1                       : signed(15 DOWNTO 0);  -- sfix16_En4
  SIGNAL Gain_mul_temp                    : signed(31 DOWNTO 0);  -- sfix32_En13
  SIGNAL Gain_out1                        : signed(15 DOWNTO 0);  -- sfix16_En4
  SIGNAL c108_MatrixGainConst             : vector_of_signed16(0 TO 7);  -- sfix16_En7 [8]
  SIGNAL MatrixGainConst                  : matrix_of_signed16(0 TO 3, 0 TO 1);  -- sfix16_En7 [4x2]
  SIGNAL MatrixGainConstt                 : matrix_of_signed16(0 TO 1, 0 TO 3);  -- sfix16_En7 [2x4]
  SIGNAL MatrixGainConstt_0_1             : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL angle_unsigned                   : unsigned(15 DOWNTO 0);  -- ufix16_En15
  SIGNAL position_unsigned                : unsigned(31 DOWNTO 0);  -- ufix32_En15
  SIGNAL Gain2_mul_temp                   : unsigned(63 DOWNTO 0);  -- ufix64_En63
  SIGNAL Gain2_out1                       : signed(15 DOWNTO 0);  -- sfix16_En4
  SIGNAL dtc_out                          : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Saturation_out1                  : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL desired_angle_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16_En15
  SIGNAL Sum_sub_cast                     : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Sum_sub_cast_1                   : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Sum_sub_temp                     : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Sum_out1                         : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Mux1_out1                        : vector_of_unsigned16(0 TO 1);  -- ufix16_En16 [2]
  SIGNAL c83_MatrixGainConst              : vector_of_signed16(0 TO 7);  -- sfix16_En14 [8]
  SIGNAL MatrixGainConst_1                : matrix_of_signed16(0 TO 1, 0 TO 3);  -- sfix16_En14 [2x4]
  SIGNAL MatrixGainConstt_1               : matrix_of_signed16(0 TO 3, 0 TO 1);  -- sfix16_En14 [4x2]
  SIGNAL MatrixGainConstt_0_3             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_2             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_1_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_0             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_3             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_2             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_1             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_0             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_0_1           : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_1_1_1           : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_1_0_1           : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_2_1             : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_2_0             : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_3_1             : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL MatrixGainConstt_3_0             : signed(15 DOWNTO 0);  -- sfix16_En7
  SIGNAL c40_MatrixGainConst              : vector_of_signed16(0 TO 15);  -- sfix16_En14 [16]
  SIGNAL MatrixGainConst_2                : matrix_of_signed16(0 TO 3, 0 TO 3);  -- sfix16_En14 [4x4]
  SIGNAL MatrixGainConstt_2               : matrix_of_signed16(0 TO 3, 0 TO 3);  -- sfix16_En14 [4x4]
  SIGNAL MatrixGainConstt_0_3_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_2_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_1_2           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_0_0_2           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_3_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_2_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_1_2           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_1_0_2           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_2_3             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_2_2             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_2_1_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_2_0_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_3_3             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_3_2             : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_3_1_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL MatrixGainConstt_3_0_1           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dtc_out_1                        : vector_of_signed16(0 TO 3);  -- sfix16_E4 [4]
  SIGNAL dtc_out_0                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_0_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_0                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_1_1                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_1_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_1                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_1                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_2                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_2_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_2                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_2                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_3                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_3_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_3                 : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Gain6_3_0                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_0_1                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_0_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_0_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_1_2                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_1_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_1_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_1_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_2_1                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_2_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_2_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_2_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_3_1                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_3_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_3_1               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Gain6_2_0                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_0_2                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_0_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_0_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_1_3                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_1_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_1_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_1_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_2_2                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_2_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_2_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_2_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_3_2                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_3_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_3_2               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Gain6_1_0                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_0_3                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_0_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_0_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_1_4                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_1_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_1_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_1_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL dtc_out_2_3                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_2_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_2_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL sum_Gain6_dotp_2_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Unit_Delay2_out1                 : vector_of_signed16(0 TO 3);  -- sfix16_E4 [4]
  SIGNAL dtc_out_3_3                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain6_dotp_3_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain6_dotp_3_3               : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Gain6_0_0                        : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL Gain6_out1                       : vector_of_signed16(0 TO 3);  -- sfix16_E4 [4]
  SIGNAL dtc_out_4                        : vector_of_signed16(0 TO 1);  -- sfix16_En5 [2]
  SIGNAL dtc_out_0_4                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_0_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_0                 : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_1_5                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_1_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_1                 : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL Gain8_3_0                        : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_0_5                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_0_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_0_1               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_1_6                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_1_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_1_1               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL Gain8_2_0                        : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_0_6                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_0_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_0_2               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_1_7                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_1_mul_temp_2      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_1_2               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL Gain8_1_0                        : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_0_7                      : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_0_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_0_3               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL dtc_out_5                        : vector_of_signed16(0 TO 3);  -- sfix16_E4 [4]
  SIGNAL dtc_out_0_8                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_0_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_0                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_1_8                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_1_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_1                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL sum_Gain7_dotp_1                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_2_4                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_2_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_2                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL sum_Gain7_dotp_2                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_3_4                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_3_mul_temp        : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_3                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Gain7_1_0                        : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL angle_pendulum                   : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_0_9                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_0_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_0_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_1_9                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_1_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_1_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL sum_Gain7_dotp_1_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_2_5                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_2_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_2_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL sum_Gain7_dotp_2_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL dtc_out_3_5                      : signed(15 DOWNTO 0);  -- sfix16_E4
  SIGNAL mul_Gain7_dotp_3_mul_temp_1      : signed(31 DOWNTO 0);  -- sfix32_En10
  SIGNAL tmp_Gain7_dotp_3_1               : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Gain7_0_0                        : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL cart_position                    : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Saturation4_out1                 : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Mux2_out1                        : vector_of_unsigned16(0 TO 1);  -- ufix16_En16 [2]
  SIGNAL Sum5_sub_cast                    : vector_of_signed17(0 TO 1);  -- sfix17_En16 [2]
  SIGNAL Sum5_sub_cast_1                  : vector_of_signed17(0 TO 1);  -- sfix17_En16 [2]
  SIGNAL Sum5_sub_temp                    : vector_of_signed17(0 TO 1);  -- sfix17_En16 [2]
  SIGNAL Sum5_out1                        : vector_of_signed16(0 TO 1);  -- sfix16_En5 [2]
  SIGNAL dtc_out_1_10                     : signed(15 DOWNTO 0);  -- sfix16_En5
  SIGNAL mul_Gain8_dotp_1_mul_temp_3      : signed(31 DOWNTO 0);  -- sfix32_En12
  SIGNAL tmp_Gain8_dotp_1_3               : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL Gain8_0_0                        : signed(15 DOWNTO 0);  -- sfix16_E3
  SIGNAL Gain8_out1                       : vector_of_signed16(0 TO 3);  -- sfix16_E3 [4]
  SIGNAL Sum3_out1                        : signed(15 DOWNTO 0);  -- sfix16_E8
  SIGNAL Gain5_mul_temp                   : signed(31 DOWNTO 0);  -- sfix32_En11
  SIGNAL Gain5_mul_temp_1                 : signed(31 DOWNTO 0);  -- sfix32_En11
  SIGNAL Gain5_mul_temp_2                 : signed(31 DOWNTO 0);  -- sfix32_En11
  SIGNAL Gain5_mul_temp_3                 : signed(31 DOWNTO 0);  -- sfix32_En11
  SIGNAL Gain5_out1                       : vector_of_signed16(0 TO 3);  -- sfix16_E3 [4]
  SIGNAL Sum6_add_cast                    : vector_of_signed17(0 TO 3);  -- sfix17_E3 [4]
  SIGNAL Sum6_add_cast_1                  : vector_of_signed17(0 TO 3);  -- sfix17_E3 [4]
  SIGNAL Sum6_add_temp                    : vector_of_signed17(0 TO 3);  -- sfix17_E3 [4]
  SIGNAL Sum6_out1                        : vector_of_signed16(0 TO 3);  -- sfix16_E2 [4]
  SIGNAL Sum4_add_cast                    : vector_of_signed19(0 TO 3);  -- sfix19_E2 [4]
  SIGNAL Sum4_add_cast_1                  : vector_of_signed19(0 TO 3);  -- sfix19_E2 [4]
  SIGNAL Sum4_add_temp                    : vector_of_signed19(0 TO 3);  -- sfix19_E2 [4]
  SIGNAL Sum4_out1                        : vector_of_signed16(0 TO 3);  -- sfix16_E4 [4]
  SIGNAL Gain3_mul_temp                   : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL Gain3_add_cast                   : signed(33 DOWNTO 0);  -- sfix34_En5
  SIGNAL Gain3_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En5
  SIGNAL Gain3_mul_temp_1                 : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL Gain3_add_cast_2                 : signed(34 DOWNTO 0);  -- sfix35_En5
  SIGNAL Gain3_add_temp                   : signed(34 DOWNTO 0);  -- sfix35_En5
  SIGNAL Gain3_add_cast_3                 : signed(35 DOWNTO 0);  -- sfix36_En5
  SIGNAL Gain3_mul_temp_2                 : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL Gain3_add_cast_4                 : signed(35 DOWNTO 0);  -- sfix36_En5
  SIGNAL Gain3_add_temp_1                 : signed(35 DOWNTO 0);  -- sfix36_En5
  SIGNAL Gain3_add_cast_5                 : signed(36 DOWNTO 0);  -- sfix37_En5
  SIGNAL Gain3_mul_temp_3                 : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL Gain3_add_cast_6                 : signed(36 DOWNTO 0);  -- sfix37_En5
  SIGNAL Gain3_add_temp_2                 : signed(36 DOWNTO 0);  -- sfix37_En5
  SIGNAL Gain3_out1                       : signed(15 DOWNTO 0);  -- sfix16_E8
  SIGNAL Sum3_cast                        : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL Sum3_cast_1                      : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL Sum3_sub_cast                    : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL Sum3_sub_temp                    : signed(28 DOWNTO 0);  -- sfix29_En4
  SIGNAL dtc_out_6                        : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Saturation1_out1                 : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Constant_out1                    : unsigned(15 DOWNTO 0);  -- ufix16_En13
  SIGNAL Sum1_add_cast                    : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Sum1_add_cast_1                  : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Sum1_add_temp                    : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Sum1_out1                        : unsigned(15 DOWNTO 0);  -- ufix16_En13
  SIGNAL Multiply_mul_temp                : unsigned(31 DOWNTO 0);  -- ufix32_En19
  SIGNAL Multiply_out1                    : unsigned(15 DOWNTO 0);  -- ufix16_En4
  SIGNAL Constant1_out1                   : unsigned(15 DOWNTO 0);  -- ufix16_En3
  SIGNAL Sum2_add_cast                    : unsigned(17 DOWNTO 0);  -- ufix18_En4
  SIGNAL Sum2_add_cast_1                  : unsigned(17 DOWNTO 0);  -- ufix18_En4
  SIGNAL Sum2_add_temp                    : unsigned(17 DOWNTO 0);  -- ufix18_En4
  SIGNAL Sum2_out1                        : unsigned(15 DOWNTO 0);  -- ufix16_En2

BEGIN
  destination_x_unsigned <= unsigned(destination_x);

  Gain1_mul_temp <= unsigned'(X"89DBBF0C") * destination_x_unsigned;
  Gain1_out1 <= signed(resize(Gain1_mul_temp(63 DOWNTO 59), 16));

  Gain_mul_temp <= to_signed(16#7B1A#, 16) * Gain1_out1;
  Gain_out1 <= Gain_mul_temp(24 DOWNTO 9);

  c108_MatrixGainConst(0) <= to_signed(16#0151#, 16);
  c108_MatrixGainConst(1) <= to_signed(16#5698#, 16);
  c108_MatrixGainConst(2) <= to_signed(-16#0001#, 16);
  c108_MatrixGainConst(3) <= to_signed(-16#0090#, 16);
  c108_MatrixGainConst(4) <= to_signed(-16#0001#, 16);
  c108_MatrixGainConst(5) <= to_signed(-16#00BA#, 16);
  c108_MatrixGainConst(6) <= to_signed(16#0151#, 16);
  c108_MatrixGainConst(7) <= to_signed(16#568C#, 16);

  c_output : PROCESS (c108_MatrixGainConst)
  BEGIN
    MatrixGainConst(0, 0) <= c108_MatrixGainConst(0);
    MatrixGainConst(1, 0) <= c108_MatrixGainConst(1);
    MatrixGainConst(2, 0) <= c108_MatrixGainConst(2);
    MatrixGainConst(3, 0) <= c108_MatrixGainConst(3);
    MatrixGainConst(0, 1) <= c108_MatrixGainConst(4);
    MatrixGainConst(1, 1) <= c108_MatrixGainConst(5);
    MatrixGainConst(2, 1) <= c108_MatrixGainConst(6);
    MatrixGainConst(3, 1) <= c108_MatrixGainConst(7);
  END PROCESS c_output;


  transpose_output : PROCESS (MatrixGainConst)
  BEGIN

    FOR t_1 IN 0 TO 3 LOOP
      FOR t_0 IN 0 TO 1 LOOP
        MatrixGainConstt(t_0, t_1) <= MatrixGainConst(t_1, t_0);
      END LOOP;
    END LOOP;

  END PROCESS transpose_output;


  MatrixGainConstt_0_1 <= MatrixGainConstt(1, 0);

  angle_unsigned <= unsigned(angle);

  position_unsigned <= unsigned(position);

  Gain2_mul_temp <= unsigned'(X"89DBBF0C") * position_unsigned;
  Gain2_out1 <= signed(resize(Gain2_mul_temp(63 DOWNTO 59), 16));

  
  dtc_out <= X"FFFF" WHEN (Gain2_out1(15) = '0') AND (Gain2_out1(14 DOWNTO 4) /= "00000000000") ELSE
      X"0000" WHEN Gain2_out1(15) = '1' ELSE
      unsigned(Gain2_out1(3 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');

  
  Saturation_out1 <= to_unsigned(16#8F5C#, 16) WHEN dtc_out > to_unsigned(16#8F5C#, 16) ELSE
      dtc_out;

  desired_angle_unsigned <= unsigned(desired_angle);

  Sum_sub_cast <= signed(resize(angle_unsigned, 17));
  Sum_sub_cast_1 <= signed(resize(desired_angle_unsigned, 17));
  Sum_sub_temp <= Sum_sub_cast - Sum_sub_cast_1;
  Sum_out1 <= unsigned(Sum_sub_temp(14 DOWNTO 0) & '0');

  Mux1_out1(0) <= Saturation_out1;
  Mux1_out1(1) <= Sum_out1;

  c83_MatrixGainConst(0) <= to_signed(16#4000#, 16);
  c83_MatrixGainConst(1) <= to_signed(16#0000#, 16);
  c83_MatrixGainConst(2) <= to_signed(16#0000#, 16);
  c83_MatrixGainConst(3) <= to_signed(16#0000#, 16);
  c83_MatrixGainConst(4) <= to_signed(16#0000#, 16);
  c83_MatrixGainConst(5) <= to_signed(16#4000#, 16);
  c83_MatrixGainConst(6) <= to_signed(16#0000#, 16);
  c83_MatrixGainConst(7) <= to_signed(16#0000#, 16);

  c_1_output : PROCESS (c83_MatrixGainConst)
  BEGIN
    MatrixGainConst_1(0, 0) <= c83_MatrixGainConst(0);
    MatrixGainConst_1(1, 0) <= c83_MatrixGainConst(1);
    MatrixGainConst_1(0, 1) <= c83_MatrixGainConst(2);
    MatrixGainConst_1(1, 1) <= c83_MatrixGainConst(3);
    MatrixGainConst_1(0, 2) <= c83_MatrixGainConst(4);
    MatrixGainConst_1(1, 2) <= c83_MatrixGainConst(5);
    MatrixGainConst_1(0, 3) <= c83_MatrixGainConst(6);
    MatrixGainConst_1(1, 3) <= c83_MatrixGainConst(7);
  END PROCESS c_1_output;


  transpose_1_output : PROCESS (MatrixGainConst_1)
  BEGIN

    FOR t_11 IN 0 TO 1 LOOP
      FOR t_01 IN 0 TO 3 LOOP
        MatrixGainConstt_1(t_01, t_11) <= MatrixGainConst_1(t_11, t_01);
      END LOOP;
    END LOOP;

  END PROCESS transpose_1_output;


  MatrixGainConstt_0_3 <= MatrixGainConstt_1(3, 0);

  MatrixGainConstt_0_2 <= MatrixGainConstt_1(2, 0);

  MatrixGainConstt_0_1_1 <= MatrixGainConstt_1(1, 0);

  MatrixGainConstt_0_0 <= MatrixGainConstt_1(0, 0);

  MatrixGainConstt_1_3 <= MatrixGainConstt_1(3, 1);

  MatrixGainConstt_1_2 <= MatrixGainConstt_1(2, 1);

  MatrixGainConstt_1_1 <= MatrixGainConstt_1(1, 1);

  MatrixGainConstt_1_0 <= MatrixGainConstt_1(0, 1);

  MatrixGainConstt_0_0_1 <= MatrixGainConstt(0, 0);

  MatrixGainConstt_1_1_1 <= MatrixGainConstt(1, 1);

  MatrixGainConstt_1_0_1 <= MatrixGainConstt(0, 1);

  MatrixGainConstt_2_1 <= MatrixGainConstt(1, 2);

  MatrixGainConstt_2_0 <= MatrixGainConstt(0, 2);

  MatrixGainConstt_3_1 <= MatrixGainConstt(1, 3);

  MatrixGainConstt_3_0 <= MatrixGainConstt(0, 3);

  c40_MatrixGainConst(0) <= to_signed(16#4000#, 16);
  c40_MatrixGainConst(1) <= to_signed(16#0000#, 16);
  c40_MatrixGainConst(2) <= to_signed(16#0000#, 16);
  c40_MatrixGainConst(3) <= to_signed(16#0000#, 16);
  c40_MatrixGainConst(4) <= to_signed(16#00A4#, 16);
  c40_MatrixGainConst(5) <= to_signed(16#3FE3#, 16);
  c40_MatrixGainConst(6) <= to_signed(16#0000#, 16);
  c40_MatrixGainConst(7) <= to_signed(-16#004A#, 16);
  c40_MatrixGainConst(8) <= to_signed(16#0002#, 16);
  c40_MatrixGainConst(9) <= to_signed(16#01B5#, 16);
  c40_MatrixGainConst(10) <= to_signed(16#401A#, 16);
  c40_MatrixGainConst(11) <= to_signed(16#13F6#, 16);
  c40_MatrixGainConst(12) <= to_signed(16#0000#, 16);
  c40_MatrixGainConst(13) <= to_signed(16#0002#, 16);
  c40_MatrixGainConst(14) <= to_signed(16#00A4#, 16);
  c40_MatrixGainConst(15) <= to_signed(16#401A#, 16);

  c_2_output : PROCESS (c40_MatrixGainConst)
  BEGIN
    MatrixGainConst_2(0, 0) <= c40_MatrixGainConst(0);
    MatrixGainConst_2(1, 0) <= c40_MatrixGainConst(1);
    MatrixGainConst_2(2, 0) <= c40_MatrixGainConst(2);
    MatrixGainConst_2(3, 0) <= c40_MatrixGainConst(3);
    MatrixGainConst_2(0, 1) <= c40_MatrixGainConst(4);
    MatrixGainConst_2(1, 1) <= c40_MatrixGainConst(5);
    MatrixGainConst_2(2, 1) <= c40_MatrixGainConst(6);
    MatrixGainConst_2(3, 1) <= c40_MatrixGainConst(7);
    MatrixGainConst_2(0, 2) <= c40_MatrixGainConst(8);
    MatrixGainConst_2(1, 2) <= c40_MatrixGainConst(9);
    MatrixGainConst_2(2, 2) <= c40_MatrixGainConst(10);
    MatrixGainConst_2(3, 2) <= c40_MatrixGainConst(11);
    MatrixGainConst_2(0, 3) <= c40_MatrixGainConst(12);
    MatrixGainConst_2(1, 3) <= c40_MatrixGainConst(13);
    MatrixGainConst_2(2, 3) <= c40_MatrixGainConst(14);
    MatrixGainConst_2(3, 3) <= c40_MatrixGainConst(15);
  END PROCESS c_2_output;


  transpose_2_output : PROCESS (MatrixGainConst_2)
  BEGIN

    FOR t_12 IN 0 TO 3 LOOP
      FOR t_02 IN 0 TO 3 LOOP
        MatrixGainConstt_2(t_02, t_12) <= MatrixGainConst_2(t_12, t_02);
      END LOOP;
    END LOOP;

  END PROCESS transpose_2_output;


  MatrixGainConstt_0_3_1 <= MatrixGainConstt_2(3, 0);

  MatrixGainConstt_0_2_1 <= MatrixGainConstt_2(2, 0);

  MatrixGainConstt_0_1_2 <= MatrixGainConstt_2(1, 0);

  MatrixGainConstt_0_0_2 <= MatrixGainConstt_2(0, 0);

  MatrixGainConstt_1_3_1 <= MatrixGainConstt_2(3, 1);

  MatrixGainConstt_1_2_1 <= MatrixGainConstt_2(2, 1);

  MatrixGainConstt_1_1_2 <= MatrixGainConstt_2(1, 1);

  MatrixGainConstt_1_0_2 <= MatrixGainConstt_2(0, 1);

  MatrixGainConstt_2_3 <= MatrixGainConstt_2(3, 2);

  MatrixGainConstt_2_2 <= MatrixGainConstt_2(2, 2);

  MatrixGainConstt_2_1_1 <= MatrixGainConstt_2(1, 2);

  MatrixGainConstt_2_0_1 <= MatrixGainConstt_2(0, 2);

  MatrixGainConstt_3_3 <= MatrixGainConstt_2(3, 3);

  MatrixGainConstt_3_2 <= MatrixGainConstt_2(2, 3);

  MatrixGainConstt_3_1_1 <= MatrixGainConstt_2(1, 3);

  MatrixGainConstt_3_0_1 <= MatrixGainConstt_2(0, 3);

  enb <= clk_enable;

  dtc_out_0 <= dtc_out_1(0);

  mul_Gain6_dotp_0_mul_temp <= MatrixGainConstt_3_0_1 * dtc_out_0;
  tmp_Gain6_dotp_0 <= mul_Gain6_dotp_0_mul_temp(29 DOWNTO 14);

  dtc_out_1_1 <= dtc_out_1(1);

  mul_Gain6_dotp_1_mul_temp <= MatrixGainConstt_3_1_1 * dtc_out_1_1;
  tmp_Gain6_dotp_1 <= mul_Gain6_dotp_1_mul_temp(29 DOWNTO 14);

  sum_Gain6_dotp_1 <= tmp_Gain6_dotp_1 + tmp_Gain6_dotp_0;

  dtc_out_2 <= dtc_out_1(2);

  mul_Gain6_dotp_2_mul_temp <= MatrixGainConstt_3_2 * dtc_out_2;
  tmp_Gain6_dotp_2 <= mul_Gain6_dotp_2_mul_temp(29 DOWNTO 14);

  sum_Gain6_dotp_2 <= tmp_Gain6_dotp_2 + sum_Gain6_dotp_1;

  dtc_out_3 <= dtc_out_1(3);

  mul_Gain6_dotp_3_mul_temp <= MatrixGainConstt_3_3 * dtc_out_3;
  tmp_Gain6_dotp_3 <= mul_Gain6_dotp_3_mul_temp(29 DOWNTO 14);

  Gain6_3_0 <= tmp_Gain6_dotp_3 + sum_Gain6_dotp_2;

  dtc_out_0_1 <= dtc_out_1(0);

  mul_Gain6_dotp_0_mul_temp_1 <= MatrixGainConstt_2_0_1 * dtc_out_0_1;
  tmp_Gain6_dotp_0_1 <= mul_Gain6_dotp_0_mul_temp_1(29 DOWNTO 14);

  dtc_out_1_2 <= dtc_out_1(1);

  mul_Gain6_dotp_1_mul_temp_1 <= MatrixGainConstt_2_1_1 * dtc_out_1_2;
  tmp_Gain6_dotp_1_1 <= mul_Gain6_dotp_1_mul_temp_1(29 DOWNTO 14);

  sum_Gain6_dotp_1_1 <= tmp_Gain6_dotp_1_1 + tmp_Gain6_dotp_0_1;

  dtc_out_2_1 <= dtc_out_1(2);

  mul_Gain6_dotp_2_mul_temp_1 <= MatrixGainConstt_2_2 * dtc_out_2_1;
  tmp_Gain6_dotp_2_1 <= mul_Gain6_dotp_2_mul_temp_1(29 DOWNTO 14);

  sum_Gain6_dotp_2_1 <= tmp_Gain6_dotp_2_1 + sum_Gain6_dotp_1_1;

  dtc_out_3_1 <= dtc_out_1(3);

  mul_Gain6_dotp_3_mul_temp_1 <= MatrixGainConstt_2_3 * dtc_out_3_1;
  tmp_Gain6_dotp_3_1 <= mul_Gain6_dotp_3_mul_temp_1(29 DOWNTO 14);

  Gain6_2_0 <= tmp_Gain6_dotp_3_1 + sum_Gain6_dotp_2_1;

  dtc_out_0_2 <= dtc_out_1(0);

  mul_Gain6_dotp_0_mul_temp_2 <= MatrixGainConstt_1_0_2 * dtc_out_0_2;
  tmp_Gain6_dotp_0_2 <= mul_Gain6_dotp_0_mul_temp_2(29 DOWNTO 14);

  dtc_out_1_3 <= dtc_out_1(1);

  mul_Gain6_dotp_1_mul_temp_2 <= MatrixGainConstt_1_1_2 * dtc_out_1_3;
  tmp_Gain6_dotp_1_2 <= mul_Gain6_dotp_1_mul_temp_2(29 DOWNTO 14);

  sum_Gain6_dotp_1_2 <= tmp_Gain6_dotp_1_2 + tmp_Gain6_dotp_0_2;

  dtc_out_2_2 <= dtc_out_1(2);

  mul_Gain6_dotp_2_mul_temp_2 <= MatrixGainConstt_1_2_1 * dtc_out_2_2;
  tmp_Gain6_dotp_2_2 <= mul_Gain6_dotp_2_mul_temp_2(29 DOWNTO 14);

  sum_Gain6_dotp_2_2 <= tmp_Gain6_dotp_2_2 + sum_Gain6_dotp_1_2;

  dtc_out_3_2 <= dtc_out_1(3);

  mul_Gain6_dotp_3_mul_temp_2 <= MatrixGainConstt_1_3_1 * dtc_out_3_2;
  tmp_Gain6_dotp_3_2 <= mul_Gain6_dotp_3_mul_temp_2(29 DOWNTO 14);

  Gain6_1_0 <= tmp_Gain6_dotp_3_2 + sum_Gain6_dotp_2_2;

  dtc_out_0_3 <= dtc_out_1(0);

  mul_Gain6_dotp_0_mul_temp_3 <= MatrixGainConstt_0_0_2 * dtc_out_0_3;
  tmp_Gain6_dotp_0_3 <= mul_Gain6_dotp_0_mul_temp_3(29 DOWNTO 14);

  dtc_out_1_4 <= dtc_out_1(1);

  mul_Gain6_dotp_1_mul_temp_3 <= MatrixGainConstt_0_1_2 * dtc_out_1_4;
  tmp_Gain6_dotp_1_3 <= mul_Gain6_dotp_1_mul_temp_3(29 DOWNTO 14);

  sum_Gain6_dotp_1_3 <= tmp_Gain6_dotp_1_3 + tmp_Gain6_dotp_0_3;

  dtc_out_2_3 <= dtc_out_1(2);

  mul_Gain6_dotp_2_mul_temp_3 <= MatrixGainConstt_0_2_1 * dtc_out_2_3;
  tmp_Gain6_dotp_2_3 <= mul_Gain6_dotp_2_mul_temp_3(29 DOWNTO 14);

  sum_Gain6_dotp_2_3 <= tmp_Gain6_dotp_2_3 + sum_Gain6_dotp_1_3;

  dtc_out_1 <= Unit_Delay2_out1;

  dtc_out_3_3 <= dtc_out_1(3);

  mul_Gain6_dotp_3_mul_temp_3 <= MatrixGainConstt_0_3_1 * dtc_out_3_3;
  tmp_Gain6_dotp_3_3 <= mul_Gain6_dotp_3_mul_temp_3(29 DOWNTO 14);

  Gain6_0_0 <= tmp_Gain6_dotp_3_3 + sum_Gain6_dotp_2_3;

  Gain6_out1(0) <= Gain6_0_0;
  Gain6_out1(1) <= Gain6_1_0;
  Gain6_out1(2) <= Gain6_2_0;
  Gain6_out1(3) <= Gain6_3_0;

  dtc_out_0_4 <= dtc_out_4(0);

  mul_Gain8_dotp_0_mul_temp <= MatrixGainConstt_3_0 * dtc_out_0_4;
  tmp_Gain8_dotp_0 <= mul_Gain8_dotp_0_mul_temp(30 DOWNTO 15);

  dtc_out_1_5 <= dtc_out_4(1);

  mul_Gain8_dotp_1_mul_temp <= MatrixGainConstt_3_1 * dtc_out_1_5;
  tmp_Gain8_dotp_1 <= mul_Gain8_dotp_1_mul_temp(30 DOWNTO 15);

  Gain8_3_0 <= tmp_Gain8_dotp_1 + tmp_Gain8_dotp_0;

  dtc_out_0_5 <= dtc_out_4(0);

  mul_Gain8_dotp_0_mul_temp_1 <= MatrixGainConstt_2_0 * dtc_out_0_5;
  tmp_Gain8_dotp_0_1 <= mul_Gain8_dotp_0_mul_temp_1(30 DOWNTO 15);

  dtc_out_1_6 <= dtc_out_4(1);

  mul_Gain8_dotp_1_mul_temp_1 <= MatrixGainConstt_2_1 * dtc_out_1_6;
  tmp_Gain8_dotp_1_1 <= mul_Gain8_dotp_1_mul_temp_1(30 DOWNTO 15);

  Gain8_2_0 <= tmp_Gain8_dotp_1_1 + tmp_Gain8_dotp_0_1;

  dtc_out_0_6 <= dtc_out_4(0);

  mul_Gain8_dotp_0_mul_temp_2 <= MatrixGainConstt_1_0_1 * dtc_out_0_6;
  tmp_Gain8_dotp_0_2 <= mul_Gain8_dotp_0_mul_temp_2(30 DOWNTO 15);

  dtc_out_1_7 <= dtc_out_4(1);

  mul_Gain8_dotp_1_mul_temp_2 <= MatrixGainConstt_1_1_1 * dtc_out_1_7;
  tmp_Gain8_dotp_1_2 <= mul_Gain8_dotp_1_mul_temp_2(30 DOWNTO 15);

  Gain8_1_0 <= tmp_Gain8_dotp_1_2 + tmp_Gain8_dotp_0_2;

  dtc_out_0_7 <= dtc_out_4(0);

  mul_Gain8_dotp_0_mul_temp_3 <= MatrixGainConstt_0_0_1 * dtc_out_0_7;
  tmp_Gain8_dotp_0_3 <= mul_Gain8_dotp_0_mul_temp_3(30 DOWNTO 15);

  dtc_out_0_8 <= dtc_out_5(0);

  mul_Gain7_dotp_0_mul_temp <= MatrixGainConstt_1_0 * dtc_out_0_8;
  tmp_Gain7_dotp_0 <= unsigned(mul_Gain7_dotp_0_mul_temp(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  dtc_out_1_8 <= dtc_out_5(1);

  mul_Gain7_dotp_1_mul_temp <= MatrixGainConstt_1_1 * dtc_out_1_8;
  tmp_Gain7_dotp_1 <= unsigned(mul_Gain7_dotp_1_mul_temp(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  sum_Gain7_dotp_1 <= tmp_Gain7_dotp_1 + tmp_Gain7_dotp_0;

  dtc_out_2_4 <= dtc_out_5(2);

  mul_Gain7_dotp_2_mul_temp <= MatrixGainConstt_1_2 * dtc_out_2_4;
  tmp_Gain7_dotp_2 <= unsigned(mul_Gain7_dotp_2_mul_temp(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  sum_Gain7_dotp_2 <= tmp_Gain7_dotp_2 + sum_Gain7_dotp_1;

  dtc_out_3_4 <= dtc_out_5(3);

  mul_Gain7_dotp_3_mul_temp <= MatrixGainConstt_1_3 * dtc_out_3_4;
  tmp_Gain7_dotp_3 <= unsigned(mul_Gain7_dotp_3_mul_temp(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  Gain7_1_0 <= tmp_Gain7_dotp_3 + sum_Gain7_dotp_2;

  angle_pendulum <= Gain7_1_0;

  dtc_out_0_9 <= dtc_out_5(0);

  mul_Gain7_dotp_0_mul_temp_1 <= MatrixGainConstt_0_0 * dtc_out_0_9;
  tmp_Gain7_dotp_0_1 <= unsigned(mul_Gain7_dotp_0_mul_temp_1(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  dtc_out_1_9 <= dtc_out_5(1);

  mul_Gain7_dotp_1_mul_temp_1 <= MatrixGainConstt_0_1_1 * dtc_out_1_9;
  tmp_Gain7_dotp_1_1 <= unsigned(mul_Gain7_dotp_1_mul_temp_1(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  sum_Gain7_dotp_1_1 <= tmp_Gain7_dotp_1_1 + tmp_Gain7_dotp_0_1;

  dtc_out_2_5 <= dtc_out_5(2);

  mul_Gain7_dotp_2_mul_temp_1 <= MatrixGainConstt_0_2 * dtc_out_2_5;
  tmp_Gain7_dotp_2_1 <= unsigned(mul_Gain7_dotp_2_mul_temp_1(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  sum_Gain7_dotp_2_1 <= tmp_Gain7_dotp_2_1 + sum_Gain7_dotp_1_1;

  dtc_out_5 <= Unit_Delay2_out1;

  dtc_out_3_5 <= dtc_out_5(3);

  mul_Gain7_dotp_3_mul_temp_1 <= MatrixGainConstt_0_3 * dtc_out_3_5;
  tmp_Gain7_dotp_3_1 <= unsigned(mul_Gain7_dotp_3_mul_temp_1(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0');

  Gain7_0_0 <= tmp_Gain7_dotp_3_1 + sum_Gain7_dotp_2_1;

  cart_position <= Gain7_0_0;

  
  Saturation4_out1 <= to_unsigned(16#8F5C#, 16) WHEN cart_position > to_unsigned(16#8F5C#, 16) ELSE
      cart_position;

  Mux2_out1(0) <= Saturation4_out1;
  Mux2_out1(1) <= angle_pendulum;


  Sum5_out1_gen: FOR t_03 IN 0 TO 1 GENERATE
    Sum5_sub_cast(t_03) <= signed(resize(Mux1_out1(t_03), 17));
    Sum5_sub_cast_1(t_03) <= signed(resize(Mux2_out1(t_03), 17));
    Sum5_sub_temp(t_03) <= Sum5_sub_cast(t_03) - Sum5_sub_cast_1(t_03);
    Sum5_out1(t_03) <= resize(Sum5_sub_temp(t_03)(16 DOWNTO 11), 16);
  END GENERATE Sum5_out1_gen;


  dtc_out_4 <= Sum5_out1;

  dtc_out_1_10 <= dtc_out_4(1);

  mul_Gain8_dotp_1_mul_temp_3 <= MatrixGainConstt_0_1 * dtc_out_1_10;
  tmp_Gain8_dotp_1_3 <= mul_Gain8_dotp_1_mul_temp_3(30 DOWNTO 15);

  Gain8_0_0 <= tmp_Gain8_dotp_1_3 + tmp_Gain8_dotp_0_3;

  Gain8_out1(0) <= Gain8_0_0;
  Gain8_out1(1) <= Gain8_1_0;
  Gain8_out1(2) <= Gain8_2_0;
  Gain8_out1(3) <= Gain8_3_0;

  Gain5_mul_temp <= to_signed(16#0034#, 16) * Sum3_out1;
  Gain5_out1(0) <= Gain5_mul_temp(29 DOWNTO 14);
  Gain5_mul_temp_1 <= to_signed(16#2546#, 16) * Sum3_out1;
  Gain5_out1(1) <= Gain5_mul_temp_1(29 DOWNTO 14);
  Gain5_mul_temp_2 <= to_signed(16#0069#, 16) * Sum3_out1;
  Gain5_out1(2) <= Gain5_mul_temp_2(29 DOWNTO 14);
  Gain5_mul_temp_3 <= to_signed(16#5CFB#, 16) * Sum3_out1;
  Gain5_out1(3) <= Gain5_mul_temp_3(29 DOWNTO 14);


  Sum6_out1_gen: FOR t_04 IN 0 TO 3 GENERATE
    Sum6_add_cast(t_04) <= resize(Gain5_out1(t_04), 17);
    Sum6_add_cast_1(t_04) <= resize(Gain8_out1(t_04), 17);
    Sum6_add_temp(t_04) <= Sum6_add_cast(t_04) + Sum6_add_cast_1(t_04);
    Sum6_out1(t_04) <= Sum6_add_temp(t_04)(14 DOWNTO 0) & '0';
  END GENERATE Sum6_out1_gen;



  Sum4_out1_gen: FOR t_05 IN 0 TO 3 GENERATE
    Sum4_add_cast(t_05) <= resize(Sum6_out1(t_05), 19);
    Sum4_add_cast_1(t_05) <= resize(Gain6_out1(t_05) & '0' & '0', 19);
    Sum4_add_temp(t_05) <= Sum4_add_cast(t_05) + Sum4_add_cast_1(t_05);
    Sum4_out1(t_05) <= Sum4_add_temp(t_05)(17 DOWNTO 2);
  END GENERATE Sum4_out1_gen;


  Unit_Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay2_out1 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Unit_Delay2_out1 <= Sum4_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay2_process;


  Gain3_mul_temp <= to_signed(-16#2897#, 16) * Unit_Delay2_out1(0);
  Gain3_add_cast <= resize(Gain3_mul_temp, 34);
  Gain3_add_cast_1 <= resize(Gain3_add_cast, 35);
  Gain3_mul_temp_1 <= to_signed(-16#1A11#, 16) * Unit_Delay2_out1(1);
  Gain3_add_cast_2 <= resize(Gain3_mul_temp_1, 35);
  Gain3_add_temp <= Gain3_add_cast_1 + Gain3_add_cast_2;
  Gain3_add_cast_3 <= resize(Gain3_add_temp, 36);
  Gain3_mul_temp_2 <= to_signed(16#5F81#, 16) * Unit_Delay2_out1(2);
  Gain3_add_cast_4 <= resize(Gain3_mul_temp_2, 36);
  Gain3_add_temp_1 <= Gain3_add_cast_3 + Gain3_add_cast_4;
  Gain3_add_cast_5 <= resize(Gain3_add_temp_1, 37);
  Gain3_mul_temp_3 <= to_signed(16#12A8#, 16) * Unit_Delay2_out1(3);
  Gain3_add_cast_6 <= resize(Gain3_mul_temp_3, 37);
  Gain3_add_temp_2 <= Gain3_add_cast_5 + Gain3_add_cast_6;
  Gain3_out1 <= Gain3_add_temp_2(28 DOWNTO 13);

  Sum3_cast <= resize(Gain_out1, 29);
  Sum3_cast_1 <=  - (Sum3_cast);
  Sum3_sub_cast <= resize(Gain3_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);
  Sum3_sub_temp <= Sum3_cast_1 - Sum3_sub_cast;
  Sum3_out1 <= Sum3_sub_temp(27 DOWNTO 12);

  
  dtc_out_6 <= X"7FFF" WHEN (Sum3_out1(15) = '0') AND (Sum3_out1(14 DOWNTO 0) /= "000000000000000") ELSE
      X"8000" WHEN Sum3_out1(15) = '1' ELSE
      signed'(Sum3_out1(15) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');

  
  Saturation1_out1 <= to_signed(16#6000#, 16) WHEN dtc_out_6 > to_signed(16#6000#, 16) ELSE
      to_signed(-16#6000#, 16) WHEN dtc_out_6 < to_signed(-16#6000#, 16) ELSE
      dtc_out_6;

  Constant_out1 <= to_unsigned(16#C000#, 16);

  Sum1_add_cast <= resize(Saturation1_out1 & '0', 18);
  Sum1_add_cast_1 <= signed(resize(Constant_out1, 18));
  Sum1_add_temp <= Sum1_add_cast + Sum1_add_cast_1;
  Sum1_out1 <= unsigned(Sum1_add_temp(15 DOWNTO 0));

  Multiply_mul_temp <= to_unsigned(16#8312#, 16) * Sum1_out1;
  Multiply_out1 <= Multiply_mul_temp(30 DOWNTO 15);

  Constant1_out1 <= to_unsigned(16#CCD0#, 16);

  Sum2_add_cast <= resize(Multiply_out1, 18);
  Sum2_add_cast_1 <= resize(Constant1_out1 & '0', 18);
  Sum2_add_temp <= Sum2_add_cast + Sum2_add_cast_1;
  Sum2_out1 <= Sum2_add_temp(17 DOWNTO 2);

  pwm <= std_logic_vector(Sum2_out1);

  ce_out <= clk_enable;

END rtl;

